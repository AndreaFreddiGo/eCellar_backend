spring.application.name=eCellar_backend
spring.config.import=file:env.properties
#Server Config
server.port=${SERVER_PORT}
#DB Config
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.url=${POSTGRES_URL}
spring.datasource.driver=org.postgresql.Driver
#Hibernate Config
spring.jpa.hibernate.ddl-auto=update
#JWT Config
jwt.secret=${JWT_SECRET}
# Elasticsearch Config
spring.elasticsearch.uris=${ELASTICSEARCH_URL}
spring.elasticsearch.connection-timeout=${ELASTICSEARCH_CONNECTION_TIMEOUT}
spring.elasticsearch.socket-timeout=${ELASTICSEARCH_SOCKET_TIMEOUT}
# OAuth2 - Google Login
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
